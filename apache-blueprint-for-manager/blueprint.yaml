#this cloudify blueprint is for apache on centos
tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml 
  - http://www.getcloudify.org/spec/openstack-plugin/1.3.1/plugin.yaml
  - types/apache.yaml

inputs:
  # Openstack Inputs
  openstack_image_id:
    type: string
    default: 'ebab03e6-a674-4b6e-8f60-691c90fbcdc6' #centos7.2
  openstack_flavor_id:
    type: string
    default: '8e6069a3-d8c6-4741-8e0d-6373b2ca38cc' #dc1.1x1.20
  vm_name:
    type: string
    default: 'lex-apache-vm'

  # General Inputs
  agent_user:
    type: string
    default: 'centos'
  
#what will be created
node_templates:
  vm_ip:
    type: cloudify.openstack.nodes.FloatingIP

  app_security_groups:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      security_group:
        description: Security group for DNS service with ssh
      rules:
        - port: 80
          remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
        - port: 22
          remote_ip_prefix: 0.0.0.0/0
          protocol: tcp

  virtual.nodes.machine:
    type: virtual.nodes.machine
    properties:
      resource_id: { get_input: vm_name }
      cloudify_agent:
        user: { get_input: agent_user }
      server:
        image: { get_input: openstack_image_id }
        flavor: { get_input: openstack_flavor_id }

    relationships:
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: vm_ip
      - type: cloudify.openstack.server_connected_to_security_group
        target: app_security_groups

  apache.nodes.runtime:
    type: apache.nodes.runtime
    relationships:
      - type: cloudify.relationships.contained_in
        target: virtual.nodes.machine


outputs:
  endpoint:
    description: Apache server IP/Port
    value:
      apache_ip: { get_attribute: [ vm_ip, floating_ip_address ] }
      apache_port: 80
